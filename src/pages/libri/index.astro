---
import BaseLayout from '~/layouts/BaseLayout.astro';
import SectionIntro from '~/components/SectionIntro';
import BookCard from '~/components/BookCard';
import { executeQuery } from '~/lib/datocms/executeQuery';
import { toPlainText } from '~/lib/text';
import { withFallbackSeo } from '~/lib/seo';
import { mapBooksToCards } from '~/lib/books';
import styles from './index/_style.module.css';
import { BOOKS_PAGE_QUERY, type BooksPageQueryResult } from './index/_graphql';

export const prerender = true;

const data = await executeQuery<BooksPageQueryResult>(BOOKS_PAGE_QUERY);

const heroTitle = data.booksIndex?.title ?? 'Libri';
const heroSubtitle = toPlainText(data.booksIndex?.subtitle ?? null);
const heroDescription = heroSubtitle.length > 0 ? heroSubtitle : undefined;
const seo = withFallbackSeo(data.booksIndex?._seoMetaTags, {
  title: heroTitle,
  description: heroDescription,
});

const books = mapBooksToCards(data.allBooks ?? []);
---

<BaseLayout seo={seo}>
  <section class={styles.section}>
    <div class={styles.intro}>
      <SectionIntro title={heroTitle} description={heroDescription} align="center" />
    </div>

    {
      books.length === 0 ? (
        <p class={styles.empty}>Il catalogo sar√† disponibile a breve.</p>
      ) : (
        <div class={styles.gridWrapper}>
          <div class={styles.booksGrid}>
            {books.map((book) => (
              <BookCard
                title={book.title}
                slug={book.slug}
                subtitle={book.subtitle}
                summary={book.summary}
                coverImage={book.coverImage}
                authors={book.authors}
                license={book.license}
                format={book.format}
                price={book.price}
                isArchived={book.isArchived}
              />
            ))}
          </div>
        </div>
      )
    }
  </section>
</BaseLayout>
