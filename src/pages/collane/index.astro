---
import BaseLayout from '~/layouts/BaseLayout.astro';
import SectionIntro from '~/components/SectionIntro';
import CollectionCard from '~/components/CollectionCard';
import { executeQuery } from '~/lib/datocms/executeQuery';
import { toPlainText, truncateToLength } from '~/lib/text';
import { withFallbackSeo } from '~/lib/seo';
import type { CollectionSummaryRecord } from '~/lib/datocms/types';
import styles from './index/_style.module.css';
import { COLLECTIONS_PAGE_QUERY, type CollectionsQueryResult } from './index/_graphql';

export const prerender = true;

const data = await executeQuery<CollectionsQueryResult>(COLLECTIONS_PAGE_QUERY);

const heroTitle = data.collectionsIndex?.title ?? 'Collane';
const heroSubtitle = toPlainText(data.collectionsIndex?.subtitle ?? null);
const heroDescription = heroSubtitle.length > 0 ? heroSubtitle : undefined;
const seo = withFallbackSeo(data.collectionsIndex?.seoMetaTags, {
  title: heroTitle,
  description: heroDescription,
});

const bookCounts = new Map<string, number>();
for (const book of data.allBooks ?? []) {
  const collectionId = book.collection?.id;
  if (!collectionId) continue;
  bookCounts.set(collectionId, (bookCounts.get(collectionId) ?? 0) + 1);
}

const collections: Array<{
  name: string;
  slug: string;
  description: string | null;
  logo: CollectionSummaryRecord['logo'];
  booksCount: number;
}> = [];

for (const collection of data.allCollections ?? []) {
  const name = collection.name ?? 'Collana senza titolo';
  const slug = collection.slug ?? '';
  if (!slug) {
    continue;
  }

  collections.push({
    name,
    slug,
    description: truncateToLength(toPlainText(collection.description ?? ''), 160) || null,
    logo: collection.logo,
    booksCount: bookCounts.get(collection.id) ?? 0,
  });
}
---

<BaseLayout seo={seo}>
  <section class={styles.section}>
    <div class={styles.intro}>
      <SectionIntro title={heroTitle} description={heroDescription} />
    </div>

    {
      collections.length === 0 ? (
        <p class={styles.empty}>Nessuna collana pubblicata trovata.</p>
      ) : (
        <div class={styles.collectionsGrid}>
          {collections.map((collection) => (
            <CollectionCard {...collection} />
          ))}
        </div>
      )
    }
  </section>
</BaseLayout>
