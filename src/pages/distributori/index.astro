---
import BaseLayout from '~/layouts/BaseLayout.astro';
import SectionIntro from '~/components/SectionIntro';
import SupplierCard from '~/components/SupplierCard';
import { executeQuery } from '~/lib/datocms/executeQuery';
import { withFallbackSeo } from '~/lib/seo';
import { toPlainText } from '~/lib/text';
import { groupSuppliersByRegion, mapSuppliersToCards } from '~/lib/suppliers';
import styles from './_style.module.css';
import { SUPPLIERS_PAGE_QUERY, type SuppliersPageQueryResult } from './_graphql';

export const prerender = true;

const data = await executeQuery<SuppliersPageQueryResult>(SUPPLIERS_PAGE_QUERY);

const heroTitle = data.suppliersIndex?.title ?? 'Distributori';
const heroSubtitleRaw = toPlainText(data.suppliersIndex?.subtitle ?? null);
const heroDescription = heroSubtitleRaw.length > 0 ? heroSubtitleRaw : undefined;

const seo = withFallbackSeo(data.suppliersIndex?._seoMetaTags, {
  title: heroTitle,
  description: heroDescription,
});

const suppliers = mapSuppliersToCards(data.allSuppliers);
const supplierGroups = groupSuppliersByRegion(suppliers);

function buildAnchorId(label: string) {
  const normalized = label.normalize('NFD').replace(/[^\p{L}0-9]+/gu, '-');
  const trimmed = normalized.replace(/^-+|-+$/g, '');
  return `region-${trimmed.toLowerCase() || 'altre'}`;
}

const supplierSections = supplierGroups.map((group) => ({
  ...group,
  anchorId: buildAnchorId(group.region),
}));

const regionMenu = supplierSections.map(({ region, anchorId }) => ({ region, anchorId }));
---

<BaseLayout seo={seo}>
  <section class={styles.layout}>
    <div class="mx-auto max-w-5xl">
      <SectionIntro title={heroTitle} description={heroDescription} align="center" />
    </div>

    {
      suppliers.length === 0 ? (
        <p class="mx-auto max-w-4xl bg-white/80 p-6 text-center text-brand-slate shadow-soft">
          I nostri distributori saranno disponibili a breve.
        </p>
      ) : (
        <div class={styles.sectionWrapper}>
          {regionMenu.length > 1 ? (
            <>
              <div id="region-menu" class="sr-only" aria-hidden="true" />
              <nav class={styles.menu} aria-label="Indice distributori per regione">
                {regionMenu.map(({ region, anchorId }) => (
                  <a href={`#${anchorId}`} class={styles.menuLink}>
                    {region}
                  </a>
                ))}
              </nav>
            </>
          ) : null}

          <div class="space-y-16">
            {supplierSections.map(({ region, suppliers: items, anchorId }) => (
              <section id={anchorId} class="space-y-8">
                <div class={styles.regionHeader}>
                  <h2 class={styles.regionTitle}>{region}</h2>
                  {regionMenu.length > 1 ? (
                    <a href="#region-menu" class={styles.backLink}>
                      Torna al menu
                    </a>
                  ) : null}
                </div>

                <div class={styles.regionList}>
                  {items.map((supplier) => (
                    <SupplierCard {...supplier} />
                  ))}
                </div>
              </section>
            ))}
          </div>
        </div>
      )
    }
  </section>
</BaseLayout>
