---
import Header from '~/components/Header.astro';
import Footer from '~/components/Footer.astro';
import '../styles/global.css';

import { Seo, type TitleMetaLinkTag } from '@datocms/astro';
import { TAG_FRAGMENT } from '~/lib/datocms/commonFragments';
import { executeQuery } from '~/lib/datocms/executeQuery';
import type { PageRecord, SeoMetaTag } from '~/lib/datocms/types';

const { seo = [] }: { seo?: TitleMetaLinkTag[] } = Astro.props;

const SITE_QUERY = /* GraphQL */ `
  ${TAG_FRAGMENT}
  query SiteMeta {
    _site {
      faviconMetaTags {
        ...TagFragment
      }
    }
    allPages(filter: { menu: { eq: true } }, orderBy: position_ASC, first: 100) {
      id
      slug
      label
    }
  }
`;

type SiteMetaResult = {
  _site: {
    faviconMetaTags: SeoMetaTag[] | null;
  } | null;
  allPages: Array<Pick<PageRecord, 'id' | 'slug' | 'label'>> | null;
};

const { _site, allPages } = await executeQuery<SiteMetaResult>(SITE_QUERY);
const faviconTags = _site?.faviconMetaTags ?? [];
const currentPath = Astro.url.pathname;

const infoPages = (allPages ?? [])
  .map((page) => {
    const slug = page.slug?.trim();
    const label = page.label?.trim();
    if (!slug || !label) {
      return null;
    }
    return {
      id: page.id,
      label,
      href: `/info/${slug}`,
    };
  })
  .filter((entry): entry is { id: string; label: string; href: string } => Boolean(entry));
---

<!doctype html>
<html lang="it">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="generator" content={Astro.generator} />
    <Seo data={[...faviconTags, ...seo]} />
    <script
      src="https://code.iconify.design/iconify-icon/2.1.0/iconify-icon.min.js"
      type="module"
      defer
      is:inline></script>

    <!-- Stub + script Vercel Web Analytics -->
    <script is:inline>
      window.va = window.va || function(){ (window.vaq = window.vaq || []).push(arguments) }
    </script>
    <script defer src="/_vercel/insights/script.js"></script>

    <script is:inline>
      window.si = window.si || function(){ (window.siq = window.siq || []).push(arguments) }
    </script>
    <script defer src="/_vercel/speed-insights/script.js"></script>

  </head>
  <body class="flex min-h-screen flex-col bg-brand-sand">
    <Header currentPath={currentPath} infoPages={infoPages} />
    <main class="flex-1 bg-white">
      <div class="container py-12 md:py-16">
        <slot />
      </div>
    </main>
    <Footer />
  </body>
</html>
