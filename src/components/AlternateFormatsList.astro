---
type AlternateFormat = {
  id: string;
  format: string;
  price?: string | null;
  href: string;
  isExternal?: boolean;
};

type Props = {
  formats: AlternateFormat[];
};

const { formats }: Props = Astro.props;
---

{
  formats.length === 0 ? null : (
    <div class="flex flex-wrap items-center gap-2 text-sm text-brand-charcoal/80">
      <span class="font-semibold uppercase tracking-wide text-brand-slate">
        Disponibile anche in
      </span>
      <ul class="flex flex-wrap gap-2">
        {formats.map((format) => (
          <li>
            {format.isExternal ? (
              <a
                href={format.href}
                target="_blank"
                rel="noopener noreferrer"
                class="inline-flex items-center gap-1 rounded-full bg-brand-mist/60 px-3 py-1 text-xs font-semibold uppercase tracking-wide text-brand-sky transition hover:bg-brand-mist"
              >
                {format.format}
                {format.price ? ` (${format.price})` : null}
              </a>
            ) : (
              <a
                href={format.href}
                class="inline-flex items-center gap-1 rounded-full bg-brand-mist/60 px-3 py-1 text-xs font-semibold uppercase tracking-wide text-brand-sky transition hover:bg-brand-mist"
              >
                {format.format}
                {format.price ? ` (${format.price})` : null}
              </a>
            )}
          </li>
        ))}
      </ul>
    </div>
  )
}
