---
import { Image } from '@datocms/astro/Image';
import type { ResponsiveImageType } from '@datocms/astro/Image';

type Props = {
  name: string;
  label?: string;
  booksLabel?: string | null;
  link?: string | null;
  image?: ResponsiveImageType | null;
  imageAlt?: string | null;
  class?: string;
};

const {
  name,
  label = 'Autore',
  booksLabel = null,
  link = null,
  image = null,
  imageAlt = name,
  class: className = '',
}: Props = Astro.props;

const Wrapper = link ? 'a' : 'div';
const wrapperProps =
  Wrapper === 'a'
    ? {
        href: link ?? undefined,
      }
    : {};

const baseClasses =
  'group flex items-center gap-4 rounded-3xl border border-brand-mist/60 bg-white/95 px-5 py-4 shadow-soft transition duration-200 ease-out hover:-translate-y-0.5 hover:shadow-2xl focus:outline-none focus-visible:ring-2 focus-visible:ring-brand-sky focus-visible:ring-offset-2 md:gap-6';
const authorInitials = name
  .split(/\s+/)
  .map((part) => part.charAt(0).toUpperCase())
  .join('')
  .slice(0, 2);
const hasLink = Wrapper === 'a';
---

<Wrapper class={`${baseClasses} ${className}`} {...wrapperProps}>
  <div
    class="relative aspect-square w-20 flex-shrink-0 overflow-hidden rounded-full border border-white/80 shadow-soft md:w-24"
  >
    {
      image ? (
        <Image
          data={{ ...image, alt: image.alt ?? imageAlt ?? name }}
          sizes="96px"
          pictureClass="block h-full w-full"
          imgClass="h-full w-full object-cover"
        />
      ) : (
        <div class="flex h-full w-full items-center justify-center bg-brand-mist text-lg font-semibold text-brand-navy md:text-xl">
          {authorInitials}
        </div>
      )
    }
  </div>

  <div class="flex flex-1 items-center justify-between gap-4 md:gap-6">
    <div class="flex flex-col gap-1 text-left">
      <p class="text-xs font-semibold uppercase tracking-[0.3em] text-brand-slate">
        {label}
      </p>
      <p
        class="text-base font-serif text-brand-navy transition group-hover:text-brand-sky md:text-lg"
      >
        {name}
      </p>
      {
        booksLabel ? (
          <p class="text-xs font-medium uppercase tracking-wide text-brand-charcoal/70">
            {booksLabel}
          </p>
        ) : null
      }
    </div>
    {
      hasLink ? (
        <iconify-icon
          icon="iconoir:nav-arrow-right"
          width="20"
          height="20"
          aria-hidden="true"
          class="text-brand-navy/70 transition group-hover:text-brand-navy"
        />
      ) : null
    }
  </div>
</Wrapper>
